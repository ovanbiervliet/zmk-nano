#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
// #include <dt-bindings/zmk/mouse.h>

#define DEF 0
#define NUM 1
#define SYM 2

#define U_RDO &kp LS(LG(Z))
#define U_PST &kp LG(V)
#define U_CPY &kp LG(C)
#define U_CUT &kp LG(X)
#define U_UND &kp LG(Z)

// #include "combos.dtsi"  // must be sourced after layer-shortcuts
// #include "mouse.dtsi"

// Behavior Overrides
&lt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    tapping-term-ms = <200>;
    quick-tap-ms = <150>;
    global-quick-tap;
};

// Sticky key
&sk {
    /delete-property/ ignore-modifiers;
    // release-after-ms = <2000>;
    quick-release;
};


// Sticky layer
&sl {
    release-after-ms = <2000>;
};

// KEY POSITION REFERENCE
// ------------------------------------------------------------------------
// | 00 | 01 | 02 | 03 | 04 | 05 |          | 06 | 07 | 08 | 09 | 10 | 11 |
// | 12 | 13 | 14 | 15 | 16 | 17 |          | 18 | 19 | 20 | 21 | 22 | 23 |
// | 24 | 25 | 26 | 27 | 28 | 29 |          | 30 | 31 | 32 | 33 | 34 | 35 |
// | 36 | 37 | 38 | 39 | 40 | 41 |          | 42 | 43 | 44 | 45 | 46 | 47 |
// | 48 | 49 | 50 | 51 | 52 | 53 |          | 54 | 55 | 56 | 57 | 58 | 59 |


/ {
  combos {
    compatible = "zmk,combos";

    caps_word {
      key-positions = <13 22>;
      bindings = <&caps_word>;
    };

    cb_ij {
      bindings = <&m_ij>;
      key-positions = <7 8>;
    };

    cb_sch {
      bindings = <&m_sch>;
      key-positions = <4 3>;
    };

    cb_tion {
      bindings = <&m_tion>;
      key-positions = <8 9>;
    };
  };

  macros {
    m_ij: m_ij {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      label = "M_IJ";
      bindings = <&kp I &kp J>;
    };

    m_sch: m_sch {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      label = "M_SCH";
      bindings = <&kp S &kp C &kp H>;
    };

    m_tion: m_tion {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      label = "M_TION";
      bindings = <&kp T &kp I &kp O &kp N>;
    };
  };

  behaviors {
    hml: homewrow_mods_left {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      label = "HOMEROW_MODS_LEFT_HAND";
      bindings = <&kp>, <&kp>;

      tapping-term-ms = <200>;
      hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
      quick-tap-ms = <150>;
      require-prior-idle-ms = <125>;
      flavor = "tap-preferred";
      hold-trigger-on-release;
    };

    hmr: homewrow_mods_right {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      label = "HOMEROW_MODS_RIGHT_HAND";
      bindings = <&kp>, <&kp>;

      tapping-term-ms = <200>;
      hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
      quick-tap-ms = <150>;
      require-prior-idle-ms = <125>;
      flavor = "tap-preferred";
      hold-trigger-on-release;
    };

    capdance: capdance {
      compatible = "zmk,behavior-tap-dance";
      label = "CAPDANCE";
      #binding-cells = <0>;
      bindings = <&caps_word>, <&kp CAPS>;
    };

    hol_tog: hold_toggle {
      compatible = "zmk,behavior-hold-tap";
      label = "HOLD_TOGGLE";
      bindings = <&mo>, <&tog>;

      #binding-cells = <2>;
      tapping-term-ms = <200>;
    };

    bsp_del: bsp_del {
      compatible = "zmk,behavior-mod-morph";
      label = "BSP_DEL";
      bindings = <&kp BACKSPACE>, <&kp DELETE>;

      #binding-cells = <0>;
      mods = <(MOD_LCTL)>;
    };
  };

  conditional_layers {
    compatible = "zmk,conditional-layers";

    tri_layer {
      if-layers = <1 2>;
      then-layer = <3>;
    };
  };


    chosen { zmk,matrix_transform = &layout_grid_transform; };
    keymap {
        compatible = "zmk,keymap";
        def_layer {
            // KEY POSITION REFERENCE
            // ------------------------------------------------------------------------
            // | 00 | 01 | 02 | 03 | 04 | 05 |          | 06 | 07 | 08 | 09 | 10 | 11 |
            // | 12 | 13 | 14 | 15 | 16 | 17 |          | 18 | 19 | 20 | 21 | 22 | 23 |
            // | 24 | 25 | 26 | 27 | 28 | 29 |          | 30 | 31 | 32 | 33 | 34 | 35 |
            // | 36 | 37 | 38 | 39 | 40 | 41 |          | 42 | 43 | 44 | 45 | 46 | 47 |
            // | 48 | 49 | 50 | 51 | 52 | 53 |          | 54 | 55 | 56 | 57 | 58 | 59 |

            //  -------------------------------------------------------------------------------------------------
            // |  GRAV |  1   |  2   |  3   |  4    |  5     |   6     |  7     |  8   |  9    |   0   | BSPC   |
            // |  TAB  |  Q   |  W   |  E   |  R    |  T     |   Y     |  U     |  I   |  O    |   P   |BSPC/DEL|
            // |  ESC  |  A   |  S   |  D   |  F    |  G     |   H     |  J     |  K   |  L    |   ;   |  '     |
            // | SHIFT |  Z   |  X   |  C   |  V    |  B     |   N     |  M     |  ,   |  .    |   /   | ---    |
            // |       | LGUI | LALT | LCTL | NUM   | SPACE  |  SPACE  |  SYM   | LEFT |  DOWN |   UP  | RIGHT  |
            bindings = <
                &kp GRAVE   &kp N1     &kp N2    &kp N3    &kp N4     &kp N5            &kp N6     &kp N7        &kp N8     &kp N9    &kp N0     &kp BSPC
                 &kp TAB     &kp Q          &kp W          &kp F           &kp P           &kp G                   &kp J         &kp L          &kp U           &kp Y          &kp SEMI          &bsp_del
                 &kp ESC     &hml LSHFT A   &hml LCTRL R   &hml LALT S     &hml LGUI T     &kp D                   &kp H         &hmr LGUI N    &hmr LALT E     &hmr LCTRL I   &hmr LSHFT O      &kp SQT
                 &kp LGUI    &kp Z          &kp X          &kp C           &kp V           &kp B                   &kp K         &kp M          &kp COMMA       &kp DOT        &kp SLASH         &none
                 &none       &none          &none          &none           &glt NUM SPACE  &kp TAB                 &bsp_del      &glt SYM RET   &kp LEFT        &kp DOWN       &kp UP            &kp RIGHT
                >;
        };
        num_layer {
            // -------------------------------------------------------------------------------------------
            // |   `   |  1   |  2   |  3   |  4   |   5   |   6   |   7   |   8  |  9   |   0   | BSPC  |
            // |   `   |  1   |  2   |  3   |  4   |   5   |   6   |   7   |   8  |  9   |   0   | DEL   |
            // |  DEL  |  F1  |  F2  |  F3  |  F4  |  F5   |  F6   |   -   |   =  |  [   |   ]   |  \    |
            // |       |  F7  |  F8  |  F9  |  F10 |  F11  |  F12  |   #   |   \  | PGUP |  PGDN |       |
            // |       |      |      |      |      | SHIFT |       |       | NEXT | VOL- |  VOL+ | PLAY  |
            bindings = <
                &kp F1      &kp F2         &kp F3          &kp F4          &kp F5        &kp F6                   &kp F7        &kp F8         &kp F9          &kp F10        &kp F11           &kp F12
                &none       &bootloader    &none           &none           &none         &caps_word               U_RDO         &kp NUM_7      &kp NUM_8       &kp NUM_9      &kp LS(SEMI)      U_UND
                &none       &kp LSHFT      &kp LCTRL       &kp LALT        &kp LGUI      &key_repeat              U_UND         &kp NUM_4      &kp NUM_5       &kp NUM_6      &kp RIGHT         &kp SQT
                &none       U_UND          U_CUT           &kp COMMA       &kp DOT       U_RDO                    &kp MINUS     &kp NUM_1      &kp NUM_2       &kp NUM_3      &kp RET           &none
                &none       &none          &none           &none           &none         &none                    &bsp_del     &kp NUM_0      &kp SPACE       &none          &none             &none
                >;
        };

        sym_layer {
            // -------------------------------------------------------------------------------------------
            // |   `   |  1   |  2   |  3   |  4   |   5   |   6   |   7   |   8  |  9   |   0   | BSPC  |
            // |   `   |  1   |  2   |  3   |  4   |   5   |   6   |   7   |   8  |  9   |   0   | DEL   |
            // |  DEL  |  F1  |  F2  |  F3  |  F4  |  F5   |  F6   |   -   |   =  |  [   |   ]   |  \    |
            // |       |  F7  |  F8  |  F9  |  F10 |  F11  |  F12  |   #   |   \  | PGUP |  PGDN |       |
            // |       |      |      |      |      | SHIFT |       |       | NEXT | VOL- |  VOL+ | PLAY  |
            bindings = <
                &kp GRAVE   &kp N1         &kp N2          &kp N3          &kp N4        &kp N5                   &kp N6        &kp N7          &kp N8         &kp N9         &kp N0             &kp BSPC
                &none       &kp EXCL       &kp AT          &kp HASH        &kp DLLR      &kp PRCT                 &kp CRRT      &kp AMPS        &kp ASTRK      &none          &none              &kp PG_UP
                &none       &kp LPAR       &kp LBKT        &kp RBKT        &kp RPAR      &kp LS(LA(NUM_2))        &kp HOME      &kp LEFT        &kp DOWN       &kp UP         &kp RIGHT          &kp PG_DN
                &none       &kp LT         &kp GRAVE       &kp BSLH        &kp GT        &kp LA(NUM_3)            &kp END       &kp MINUS       &kp EQL        &kp LS(P)      &kp P              &none
                &none       &none          &none           &kp LC(TAB)     &kp SPACE     &kp LG(TAB)              &none         &none           &none          &none          &none              &none
                >;
        };
    };
};
